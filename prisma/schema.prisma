
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
}

model User {
  id            String       @id @default(uuid())
  email         String       @unique
  password      String
  ownedProjects Project[]    @relation("UserOwnedProjects")
  assignedTasks Task[]       @relation("UserAssignedTasks")
  memberships   Membership[]

  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  @@map("users")
}

model Project {
  id          String       @id @default(uuid())
  name        String
  image       String
  ownerId     String
  owner       User         @relation("UserOwnedProjects", fields: [ownerId], references: [id])
  tasks       Task[]
  memberships Membership[]

  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@map("projects")
}

model Task {
  id          String     @id @default(uuid())
  title       String
  description String?    
  status      TaskStatus @default(TODO) 
  projectId   String
  project     Project    @relation(fields: [projectId], references: [id])
  assigneeId  String
  assignee    User       @relation("UserAssignedTasks", fields: [assigneeId], references: [id])

  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@map("tasks")
}

model Membership {
  id        String  @id @default(uuid())
  userId    String
  user      User    @relation(fields: [userId], references: [id])
  projectId String
  project   Project @relation(fields: [projectId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, projectId]) 
  @@map("memberships")
}
